# Cómo Utilizar un Sensor de Proximidad con Arduino


## Materiales Necesarios
- Placa Arduino (Arduino Uno)
- LED (cualquier color)
- Resistencia de 220 ohmios
- Sensor ultrasónico de proximidad (HC-SR04)
- Cables de conexión
- Protoboard

## Esquematico
![](../src/Practics/HC-SR04.png)

## Paso 1: Conexiones
1. Conecta el sensor de proximidad al Arduino:
   - **TRIG** del sensor al pin **10** del Arduino.
   - **ECO** del sensor al pin **9** del Arduino.
2. Conecta el LED:
   - **Ánodo (+)** del LED al pin **3** del Arduino.
   - **Cátodo (-)** del LED a través de una resistencia al **GND** del Arduino.

## Paso 2: Programación
```cpp
int TRIG = 10;
int ECO = 9;
int LED = 3;
int DURACION;
int DISTANCIA;

void setup() {
  pinMode(TRIG, OUTPUT);
  pinMode(ECO, INPUT);
  pinMode(LED, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  digitalWrite(TRIG, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG, LOW);
  DURACION = pulseIn(ECO, HIGH);
  DISTANCIA = DURACION / 58.2;
  Serial.println(DISTANCIA);
  delay(200);
  
  if (DISTANCIA <= 20 && DISTANCIA >= 0) {
    digitalWrite(LED, HIGH);
    delay(DISTANCIA * 10);
    digitalWrite(LED, LOW);
  }
}
```

## Explicación
1. **Conexiones**: Hemos conectado el sensor de proximidad y el LED al Arduino según las especificaciones.
2. **Programación**:
   - El sensor envía un pulso ultrasónico y mide el tiempo que tarda en recibir el eco.
   - Calculamos la distancia en centímetros utilizando la fórmula: `DISTANCIA = DURACION / 58.2`.
   - Si la distancia es menor o igual a 20 cm, el LED se enciende durante un tiempo proporcional a la distancia medida.

## Resultado
¡Ahora tienes un sistema que enciende un LED cuando un objeto está cerca! Puedes personalizarlo para diferentes aplicaciones, como una alarma de proximidad o una luz nocturna.

¡Diviértete experimentando con tu sensor de proximidad y Arduino! 🚀